{"version":3,"sources":["main.js"],"names":["counter","wins","losses","ties","Money","Games","_loop","i","NumberOfRounds","currentBet","RunningCount","Shoes","Shoe","DecksInShoe","length","CardsRemaining","_loop2","Splitting","Hands","info","TrueCount","SoftPlayersHand","SoftDealersHand","DoubleAces","FirstSoft","SecondSoft","GetRandomCard","RandomSelectedNumber","Math","floor","random","RandomCard","splice","includes","DealersCard","FirstCard","SecondCard","PlayersHand","Hit","Soft","ThirdCard","DoubleDown","DealersHand","Stand","BlackJack","PlayerWins","PlayerLooses","Split","FirstCard1","FirstCard2","SecondCard1","SecondCard2","PlayersHand1","PlayersHand2","data","l","console","log","_ret2","_ret"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,OAAOA,CAAA,EAAG;EAEjB,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,IAAI,GAAG,CAAC;EAEZ,IAAIC,KAAK,GAAG,KAAK;EAEjB,IAAIC,KAAK,GAAG,IAAI;EAAC,IAAAC,KAAA,YAAAA,MAAA,EAED;IAEd,IAAGF,KAAK,IAAI,CAAC,EAAC;MAAA;IAEd;IAEA,IAAIG,CAAC,GAAG,CAAC;IAET,IAAIC,cAAc,GAAG,MAAM;IAE3B,IAAIC,UAAU,GAAG,CAAC;IAElB,IAAIC,YAAY,GAAG,CAAC;IACpB,IAAIC,KAAK,GAAG,EAAE;IAEd,IAAIC,IAAI,GAAG,CAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;IAC5zB,IAAIC,WAAW,GAAID,IAAI,CAACE,MAAM,GAAG,EAAG;IAEpC,IAAIC,cAAc,GAAGH,IAAI,CAACE,MAAM;IAAC,IAAAE,MAAA,YAAAA,OAAA,EAER;MAEvB,IAAIC,SAAS,GAAG,KAAK;MACrB,IAAIC,KAAK,GAAG,EAAE;MACd,IAAIC,IAAI,GAAG,EAAE;MAEb,IAAIC,SAAS,GAAGV,YAAY,GAAGG,WAAW;MAE1C,IAAIQ,eAAe,GAAG,KAAK;MAC3B,IAAIC,eAAe,GAAG,KAAK;MAC3B,IAAIC,UAAU,GAAG,KAAK;MAEtB,IAAIC,SAAS,GAAG,KAAK;MACrB,IAAIC,UAAU,GAAG,KAAK;MAEtB,SAASC,aAAaA,CAAA,EAAG;QAEvB,IAAIC,oBAAoB,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIf,cAAc,GAAG,CAAC,CAAC,CAAC,GAAG,CAAE;QAEjF,IAAIgB,UAAU,GAAGnB,IAAI,CAACe,oBAAoB,CAAC;QAE3Cf,IAAI,CAACoB,MAAM,CAACL,oBAAoB,EAAE,CAAC,CAAC;;QAEpC;;QAEAZ,cAAc,GAAGH,IAAI,CAACE,MAAM;QAC5BD,WAAW,GAAIE,cAAc,GAAG,EAAG;QAEnC,IAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAACkB,QAAQ,CAACF,UAAU,CAAC,EAAC;UAClCrB,YAAY,IAAI,CAAC;QACnB,CAAC,MACI,IAAG,CAAC,EAAE,EAAC,KAAK,CAAC,CAACuB,QAAQ,CAACF,UAAU,CAAC,EAAC;UACtCrB,YAAY,IAAI,CAAC;QACnB;QAEA,IAAGK,cAAc,IAAI,CAAC,EAAC;UACrBJ,KAAK,IAAI,CAAC;UACVC,IAAI,GAAG,CAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction counter() {\n\n  let wins = 0;\n  let losses = 0;\n  let ties = 0;\n\n  let Money = 10000;\n\n  let Games = 1000;\n\n  while(Games > 0){\n\n    if(Money <= 0){\n      break;\n    }\n\n    let i = 0;\n\n    let NumberOfRounds = 100000;\n\n    let currentBet = 5;\n\n    let RunningCount = 0;\n    let Shoes = 10; \n\n    let Shoe = [\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10]\n    let DecksInShoe = (Shoe.length / 52);\n\n    let CardsRemaining = Shoe.length;\n\n    while(i < NumberOfRounds){\n\n      let Splitting = false;\n      let Hands = [];\n      let info = [];\n\n      let TrueCount = RunningCount / DecksInShoe;\n\n      let SoftPlayersHand = false; \n      let SoftDealersHand = false;\n      let DoubleAces = false;\n\n      let FirstSoft = false;\n      let SecondSoft = false;\n\n      function GetRandomCard() {\n\n        let RandomSelectedNumber = (Math.floor(Math.random() * (CardsRemaining - 1)) + 1)\n\n        let RandomCard = Shoe[RandomSelectedNumber];\n\n        Shoe.splice(RandomSelectedNumber, 1);\n\n        //console.log(RandomCard);\n\n        CardsRemaining = Shoe.length; \n        DecksInShoe = (CardsRemaining / 52);\n\n        if([2,3,4,5,6].includes(RandomCard)){\n          RunningCount += 1;\n        }\n        else if([10,\"Ace\"].includes(RandomCard)){\n          RunningCount -= 1;\n        }\n        \n        if(CardsRemaining <= 5){\n          Shoes -= 1;\n          Shoe = [\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10,\"Ace\",2,3,4,5,6,7,8,9,10,10,10,10];\n          CardsRemaining = Shoe.length;\n          //console.log(`There are ${Shoes} shoes left!`);\n        }\n\n        TrueCount = RunningCount / DecksInShoe;\n\n        return RandomCard;\n      }\n\n      let DealersCard = GetRandomCard();\n\n      if (DealersCard == \"Ace\"){\n        DealersCard = 11;\n        SoftDealersHand = true;\n      }\n      \n      let FirstCard = GetRandomCard();\n      let SecondCard = GetRandomCard();   \n\n      if(FirstCard == SecondCard){\n        Splitting = true;\n      }\n\n      if ((FirstCard == \"Ace\" && SecondCard == \"Ace\")){\n        SoftPlayersHand = true;\n        DoubleAces = true;\n        FirstCard = 11;\n        SecondCard = 1;\n      }\n\n      if (FirstCard == \"Ace\"){\n        SoftPlayersHand = true; \n        if (SecondCard <= 10){\n          FirstCard = 11;\n        }\n        else {\n          FirstCard = 1;\n        }\n      }\n\n      if (SecondCard == \"Ace\"){\n        SoftPlayersHand = true; \n        if (FirstCard <= 10){\n          SecondCard = 11;\n        }\n        else {\n          SecondCard = 1;\n        }\n      }\n\n      let PlayersHand = FirstCard + SecondCard;\n      Hands = [PlayersHand];\n\n      //PLAING OPTIONS\n\n      //Hit\n      function Hit(PlayersHand, Soft) {\n        let ThirdCard = GetRandomCard();\n\n        if (ThirdCard == \"Ace\"){\n          if (PlayersHand <= 10){ \n            ThirdCard = 11;\n            SoftPlayersHand = true;\n          }\n          else {\n            ThirdCard = 1;\n          }\n        }\n\n        PlayersHand = PlayersHand + ThirdCard;\n\n        if((Soft == true) && (PlayersHand > 21)){\n          PlayersHand -= 10;\n          Soft = false;\n        }\n\n        //console.log(\"After Hitting: \", PlayersHand);\n\n        return [PlayersHand, Soft];\n      }\n\n      //Double Down\n      function DoubleDown(PlayersHand, SoftPlayersHand, DealersHand, SoftDealersHand) {\n        currentBet = currentBet * 2;\n\n        info = Hit(PlayersHand, SoftPlayersHand);\n        PlayersHand = info[0];\n        SoftPlayersHand = info[1];\n        info = [];\n\n        Stand(PlayersHand, DealersHand, SoftDealersHand);\n        currentBet = currentBet / 2;\n        return PlayersHand;\n      }\n\n      //Stand\n      function Stand(PlayersHand, DealersHand, SoftDealersHand){\n\n        info = Hit(DealersHand, SoftDealersHand);\n        DealersHand = info[0];\n        SoftDealersHand = info[1];\n        info = [];\n\n        if (PlayersHand == \"BlackJack\"){\n          if(DealersHand == 21){\n            //Push\n            SoftPlayersHand = false;\n            ties += 1;\n            return;\n          }\n          else {\n            BlackJack(currentBet);\n            return;\n          }\n        }\n\n        while(DealersHand < 17){\n          info = Hit(DealersHand, SoftDealersHand);\n          DealersHand = info[0];\n          SoftDealersHand = info[1];\n          info = [];\n        }\n\n        if((DealersHand > 21) && (SoftDealersHand == false)){\n          PlayerWins(currentBet);\n          return;\n        }\n\n        else if((DealersHand > 21) && (SoftDealersHand == true)){\n          DealersHand = DealersHand - 10; \n          while (DealersHand < 17){\n            info = Hit(DealersHand, SoftDealersHand);\n            DealersHand = info[0];\n            SoftDealersHand = info[1];\n            info = [];\n          }\n          if(DealersHand > 21){\n            PlayerWins(currentBet);\n            return;\n          }\n        }\n\n        if(PlayersHand == DealersHand){\n          SoftPlayersHand = false;\n          ties += 1;\n          return;\n        }\n        else if(PlayersHand > DealersHand){\n          PlayerWins(currentBet);\n          return;\n        }\n        else if(PlayersHand < DealersHand){\n          PlayerLooses(currentBet);\n          return;\n        }\n      }\n\n      function Split(FirstCard, SecondCard, SoftPlayersHand){\n        let FirstCard1 = FirstCard;\n        let FirstCard2 = SecondCard;\n        let SecondCard1 = GetRandomCard();\n        let SecondCard2 = GetRandomCard();\n\n        let FirstSoft = false;\n        let SecondSoft = false;\n\n        if(SoftPlayersHand == true){\n          if(FirstCard1 == 11){\n            //FirstCard is Ace\n            FirstSoft = true;\n          }\n          if((FirstCard2 == 11) || (FirstCard2 == 1)){\n            //SecondCard is Ace\n            SecondSoft = true;\n            if(FirstCard2 = 1){\n              FirstCard2 = 11;\n            }\n          }\n        }\n\n        if ((FirstCard1 == 11 && SecondCard1 == \"Ace\")){\n          FirstSoft = true;\n          FirstCard1 = 11;\n          SecondCard1 = 1;\n        }\n\n        if ((FirstCard2 == 11 && SecondCard2 == \"Ace\")){\n          SecondSoft = true;\n          FirstCard2 = 11;\n          SecondCard2 = 1;\n        }\n\n        if(SecondCard1 == \"Ace\"){\n          FirstSoft = true;\n          if (FirstCard1 <= 10){\n            SecondCard1 = 11;\n          }\n          else {\n            SecondCard1 = 1;\n          }\n        }\n        if(SecondCard2 == \"Ace\"){\n          SecondSoft = true;\n          if (FirstCard2 <= 10){\n            SecondCard2 = 11;\n          }\n          else {\n            SecondCard2 = 1;\n          }\n        }\n\n        let PlayersHand1 = FirstCard1 + SecondCard1;\n        let PlayersHand2 = FirstCard2 + SecondCard2;\n\n        return [[PlayersHand1, PlayersHand2], FirstSoft, SecondSoft];\n      }\n\n      //BlackJack\n      function BlackJack(currentBet){\n        Money += (currentBet * 1.5);\n        SoftPlayersHand = false;\n        wins += 1;\n        return;\n      }\n\n      //Win\n      function PlayerWins(currentBet){\n        Money += currentBet;\n        SoftPlayersHand = false;\n        wins += 1;\n        return;\n      }\n\n      //Loss\n      function PlayerLooses(currentBet){\n        Money -= currentBet;\n        SoftPlayersHand = false;\n        losses += 1;\n        return;\n      }\n\n      \n      //Splitting\n      if(Splitting == true){   \n        if((DoubleAces == true) || (PlayersHand == 16) || ((PlayersHand == 18) && (((2 <= DealersCard) && (DealersCard <= 6)) || ((DealersCard == 8) || (DealersCard == 9)))) || ((PlayersHand == 14) && ((DealersCard >= 2) && (DealersCard <= 7))) || ((PlayersHand == 12) && ((2 <= DealersCard) && (DealersCard <= 6))) || (((PlayersHand == 6) || (PlayersHand == 4)) && ((2 <= DealersCard) && (DealersCard <= 7)))){\n          let data = Split(FirstCard, SecondCard, SoftPlayersHand);\n          Hands = data[0];\n          FirstSoft = data[1];\n          SecondSoft = data[2];\n        }\n      }\n\n      //PLAYER'S ALGORITHM\n      \n      for (let l = 0; l < Hands.length; l++) {\n        PlayersHand = Hands[l];\n        let DealersHand = DealersCard;\n        if(Hands.length == 2){\n          if(l == 0){\n            SoftPlayersHand = FirstSoft;\n          }\n          if(l == 1){\n            SoftPlayersHand = SecondSoft;\n          }\n        }\n        if (SoftPlayersHand == false){\n          if((PlayersHand == 11) || ((PlayersHand == 10) &&  (DealersCard <= 9)) || ((PlayersHand == 9) && ((3 <= DealersCard) && (DealersCard <= 6)))){\n            //Double Down\n            PlayersHand = DoubleDown(PlayersHand, SoftPlayersHand, DealersHand, SoftDealersHand);\n          }\n          else if((PlayersHand >= 17) || ((13 <= PlayersHand) && (DealersCard <= 6)) || ((PlayersHand == 12) && ((4 <= DealersCard) && (DealersCard <= 6)))){\n            //Stand\n            Stand(PlayersHand, DealersHand, SoftDealersHand);\n          }\n          else{\n            //Hit\n            while(17 > PlayersHand){\n              info = Hit(PlayersHand, SoftPlayersHand);\n              PlayersHand = info[0];\n              SoftPlayersHand = info[1];\n              info = [];\n            }\n            if(PlayersHand > 21){\n              PlayerLooses(currentBet);\n            }\n            else {\n              Stand(PlayersHand, DealersHand, SoftDealersHand);\n            }\n          }\n        }\n        if (SoftPlayersHand == true){\n\n          if(PlayersHand == 21){\n            //BlackJack\n            PlayersHand = \"BlackJack\";\n            Stand(PlayersHand, DealersHand, SoftDealersHand);\n          }\n\n          else if(((PlayersHand <= 19) && (DealersCard == 6)) || ((PlayersHand <= 18) && (DealersCard == 5)) || (((15 <= PlayersHand) && (PlayersHand <= 18)) && (DealersCard == 4)) || (((PlayersHand == 17) ||(PlayersHand == 18)) && (DealersCard == 3)) || ((PlayersHand == 18) && (DealersCard == 2))){\n            // Double Down\n            PlayersHand = DoubleDown(PlayersHand, SoftPlayersHand, DealersHand, SoftDealersHand); \n\n          }\n\n          else if((PlayersHand >= 20) || ((PlayersHand == 19) && (DealersCard != 6)) || ((PlayersHand == 18) && ((DealersCard == 7) || (DealersCard == 8)))){\n            //Stand\n            Stand(PlayersHand, DealersHand, SoftDealersHand);\n          }\n\n          else {\n            //Hit\n            while(17 >= PlayersHand){\n              info = Hit(PlayersHand, SoftPlayersHand);\n              PlayersHand = info[0];\n              SoftPlayersHand = info[1];\n              info = [];\n            }\n            if(PlayersHand > 21){\n              PlayersHand = PlayersHand - 10;\n              while(17 > PlayersHand){\n                info = Hit(PlayersHand, SoftPlayersHand);\n                PlayersHand = info[0];\n                SoftPlayersHand = info[1];\n                info = [];\n              }\n              if(PlayersHand > 21){\n                PlayerLooses(currentBet);\n              }\n              else {\n                Stand(PlayersHand, DealersHand, SoftDealersHand);\n              }\n            }\n            else {\n              Stand(PlayersHand, DealersHand, SoftDealersHand);\n            }\n          }\n        }\n      }\n      if(Shoes <= 0){\n        break;\n      }\n\n      if (TrueCount < 1){\n        currentBet = 5;\n      }\n      else if ((1 < TrueCount) && (TrueCount < 2)){\n        currentBet = 50;\n      }\n      else if (2 < TrueCount && TrueCount < 3){         \n        currentBet = 100; \n      }\n      else if (3 < TrueCount && TrueCount < 4){\n        currentBet = 150;\n      }\n      else if (4 < TrueCount && TrueCount < 5){\n        currentBet = 200;\n      }\n      else if (5 < TrueCount && TrueCount < 6){\n        currentBet = 250;\n      }\n      else if (TrueCount > 6){\n        currentBet = 300;\n      }\n      //console.log(\"Running Count: \", RunningCount)\n      //console.log(\"True Count: \", TrueCount);\n      //console.log(\"Current Bet: \", currentBet)\n      //console.log(\"Cards Remaining: \", CardsRemaining)\n      i += 1;\n      \n      if(Money <= 0){\n        console.log(\"Lost all money!!!\")\n        break;\n      }\n    }\n    Games -= 1;\n  }\n  console.log(\"Wins: \", wins)\n  console.log(\"Losses: \", losses)\n  console.log(\"Ties: \", ties)\n  console.log(\"Money: \", Money)\n}\n\ncounter();"]}